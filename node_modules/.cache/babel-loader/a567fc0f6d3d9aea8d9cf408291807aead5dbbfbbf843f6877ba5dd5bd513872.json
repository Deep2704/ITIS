{"ast":null,"code":"var _jsxFileName = \"/Users/deepprabhu/Documents/java/ITIS/Assignment_3/frontend/src/components/ForgotPassword/ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport forgotPasswordStyle from './ForgotPassword.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [step, setStep] = useState(1); // 1: Request Code, 2: Verify Code and Reset Password\n  const navigate = useNavigate();\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/forgot-password', {\n        email\n      });\n      setMessage(response.data.message);\n      setStep(2); // Proceed to the next step\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred\");\n    }\n  };\n  const handleVerifyCode = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/verify-reset-code', {\n        email,\n        code: verificationCode\n      });\n      setMessage(response.data.message);\n      if (response.data.message === 'Code verified successfully.') {\n        handleResetPassword();\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setMessage(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"An error occurred\");\n    }\n  };\n  const handleResetPassword = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/reset-password', {\n        email,\n        code: verificationCode,\n        new_password: newPassword\n      });\n      setMessage(response.data.message);\n      if (response.data.message === 'Password reset successfully.') {\n        navigate('/login');\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setMessage(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"An error occurred\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: forgotPasswordStyle.forgotPassword,\n    children: [step === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleForgotPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerifyCode,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Verify Code and Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter verification code\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify and Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"vb3QwYbBa+ZWzFOuUyJZFwYNbrE=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","forgotPasswordStyle","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","verificationCode","setVerificationCode","newPassword","setNewPassword","message","setMessage","step","setStep","navigate","handleForgotPassword","e","preventDefault","response","post","data","error","_error$response","_error$response$data","handleVerifyCode","code","handleResetPassword","_error$response2","_error$response2$data","new_password","_error$response3","_error$response3$data","className","forgotPassword","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/deepprabhu/Documents/java/ITIS/Assignment_3/frontend/src/components/ForgotPassword/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport forgotPasswordStyle from './ForgotPassword.module.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [step, setStep] = useState(1); // 1: Request Code, 2: Verify Code and Reset Password\n  const navigate = useNavigate();\n\n  const handleForgotPassword = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/forgot-password', { email });\n      setMessage(response.data.message);\n      setStep(2); // Proceed to the next step\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"An error occurred\");\n    }\n  };\n\n  const handleVerifyCode = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/verify-reset-code', { email, code: verificationCode });\n      setMessage(response.data.message);\n      if (response.data.message === 'Code verified successfully.') {\n        handleResetPassword();\n      }\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"An error occurred\");\n    }\n  };\n\n  const handleResetPassword = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/reset-password', { email, code: verificationCode, new_password: newPassword });\n      setMessage(response.data.message);\n      if (response.data.message === 'Password reset successfully.') {\n        navigate('/login');\n      }\n    } catch (error) {\n      setMessage(error.response?.data?.message || \"An error occurred\");\n    }\n  };\n\n  return (\n    <div className={forgotPasswordStyle.forgotPassword}>\n      {step === 1 && (\n        <form onSubmit={handleForgotPassword}>\n          <h1>Forgot Password</h1>\n          <input\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Submit</button>\n          {message && <p>{message}</p>}\n        </form>\n      )}\n      {step === 2 && (\n        <form onSubmit={handleVerifyCode}>\n          <h1>Verify Code and Reset Password</h1>\n          <input\n            type=\"text\"\n            placeholder=\"Enter verification code\"\n            value={verificationCode}\n            onChange={(e) => setVerificationCode(e.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Enter new password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Verify and Reset Password</button>\n          {message && <p>{message}</p>}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,6BAA6B;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMkB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,oBAAoB,GAAG,MAAOC,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,uCAAuC,EAAE;QAAEf;MAAM,CAAC,CAAC;MACrFO,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,CAAC;MACjCG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,OAAOQ,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdZ,UAAU,CAAC,EAAAW,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBb,OAAO,KAAI,mBAAmB,CAAC;IAClE;EACF,CAAC;EAED,MAAMc,gBAAgB,GAAG,MAAOR,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,yCAAyC,EAAE;QAAEf,KAAK;QAAEqB,IAAI,EAAEnB;MAAiB,CAAC,CAAC;MAC/GK,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,CAAC;MACjC,IAAIQ,QAAQ,CAACE,IAAI,CAACV,OAAO,KAAK,6BAA6B,EAAE;QAC3DgB,mBAAmB,CAAC,CAAC;MACvB;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MAAA,IAAAM,gBAAA,EAAAC,qBAAA;MACdjB,UAAU,CAAC,EAAAgB,gBAAA,GAAAN,KAAK,CAACH,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBlB,OAAO,KAAI,mBAAmB,CAAC;IAClE;EACF,CAAC;EAED,MAAMgB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,sCAAsC,EAAE;QAAEf,KAAK;QAAEqB,IAAI,EAAEnB,gBAAgB;QAAEuB,YAAY,EAAErB;MAAY,CAAC,CAAC;MACvIG,UAAU,CAACO,QAAQ,CAACE,IAAI,CAACV,OAAO,CAAC;MACjC,IAAIQ,QAAQ,CAACE,IAAI,CAACV,OAAO,KAAK,8BAA8B,EAAE;QAC5DI,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MAAA,IAAAS,gBAAA,EAAAC,qBAAA;MACdpB,UAAU,CAAC,EAAAmB,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBrB,OAAO,KAAI,mBAAmB,CAAC;IAClE;EACF,CAAC;EAED,oBACET,OAAA;IAAK+B,SAAS,EAAElC,mBAAmB,CAACmC,cAAe;IAAAC,QAAA,GAChDtB,IAAI,KAAK,CAAC,iBACTX,OAAA;MAAMkC,QAAQ,EAAEpB,oBAAqB;MAAAmB,QAAA,gBACnCjC,OAAA;QAAAiC,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtC,OAAA;QACEuC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAEtC,KAAM;QACbuC,QAAQ,EAAG3B,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFtC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACpC7B,OAAO,iBAAIT,OAAA;QAAAiC,QAAA,EAAIxB;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACP,EACA3B,IAAI,KAAK,CAAC,iBACTX,OAAA;MAAMkC,QAAQ,EAAEX,gBAAiB;MAAAU,QAAA,gBAC/BjC,OAAA;QAAAiC,QAAA,EAAI;MAA8B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCtC,OAAA;QACEuC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,yBAAyB;QACrCC,KAAK,EAAEpC,gBAAiB;QACxBqC,QAAQ,EAAG3B,CAAC,IAAKT,mBAAmB,CAACS,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;QACrDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFtC,OAAA;QACEuC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAElC,WAAY;QACnBmC,QAAQ,EAAG3B,CAAC,IAAKP,cAAc,CAACO,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;QAChDG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFtC,OAAA;QAAQuC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACvD7B,OAAO,iBAAIT,OAAA;QAAAiC,QAAA,EAAIxB;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpC,EAAA,CAnFID,cAAc;EAAA,QAMDH,WAAW;AAAA;AAAA+C,EAAA,GANxB5C,cAAc;AAqFpB,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}