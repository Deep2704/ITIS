{"ast":null,"code":"var _jsxFileName = \"/Users/deepprabhu/Documents/java/ITIS/Assignment_3/frontend/src/components/ResetPassword/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport basestyle from \"../../css/Base.module.css\";\nimport resetstyle from \"./ResetPassword.module.css\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [formErrors, setFormErrors] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    email,\n    code\n  } = location.state;\n  const validateForm = () => {\n    const errors = {};\n    if (!newPassword) {\n      errors.newPassword = \"New password is required\";\n    } else if (newPassword.length < 6) {\n      errors.newPassword = \"Password must be at least 6 characters\";\n    }\n    if (!confirmPassword) {\n      errors.confirmPassword = \"Confirm password is required\";\n    } else if (newPassword !== confirmPassword) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    return errors;\n  };\n  const handlePasswordReset = e => {\n    e.preventDefault();\n    const errors = validateForm();\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    axios.post(\"http://ec2-3-107-93-162.ap-southeast-2.compute.amazonaws.com:5000/reset-password\", {\n      email,\n      code,\n      new_password: newPassword\n    }).then(res => {\n      setMessage(res.data.message);\n      navigate(\"/login\");\n    }).catch(error => {\n      setMessage(error.response.data.message || \"Error resetting password. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: resetstyle.reset,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: resetstyle.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"newPassword\",\n          placeholder: \"Enter your new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          className: resetstyle.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: basestyle.error,\n          children: formErrors.newPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: resetstyle.inputContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm your new password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          className: resetstyle.inputField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: basestyle.error,\n          children: formErrors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: basestyle.button_common,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"tODP0K4K5ZlM3n5G4210gZtwvss=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","basestyle","resetstyle","axios","useLocation","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","formErrors","setFormErrors","message","setMessage","location","navigate","email","code","state","validateForm","errors","length","handlePasswordReset","e","preventDefault","Object","keys","post","new_password","then","res","data","catch","error","response","className","reset","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","type","name","placeholder","value","onChange","target","inputField","button_common","_c","$RefreshReg$"],"sources":["/Users/deepprabhu/Documents/java/ITIS/Assignment_3/frontend/src/components/ResetPassword/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport basestyle from \"../../css/Base.module.css\";\nimport resetstyle from \"./ResetPassword.module.css\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [formErrors, setFormErrors] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { email, code } = location.state;\n\n  const validateForm = () => {\n    const errors = {};\n    if (!newPassword) {\n      errors.newPassword = \"New password is required\";\n    } else if (newPassword.length < 6) {\n      errors.newPassword = \"Password must be at least 6 characters\";\n    }\n    if (!confirmPassword) {\n      errors.confirmPassword = \"Confirm password is required\";\n    } else if (newPassword !== confirmPassword) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    return errors;\n  };\n\n  const handlePasswordReset = (e) => {\n    e.preventDefault();\n    const errors = validateForm();\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    axios.post(\"http://ec2-3-107-93-162.ap-southeast-2.compute.amazonaws.com:5000/reset-password\", { email, code, new_password: newPassword })\n      .then((res) => {\n        setMessage(res.data.message);\n        navigate(\"/login\");\n      })\n      .catch((error) => {\n        setMessage(error.response.data.message || \"Error resetting password. Please try again.\");\n      });\n  };\n  \n\n  return (\n    <div className={resetstyle.reset}>\n      <form onSubmit={handlePasswordReset}>\n        <h1>Reset Password</h1>\n        <div className={resetstyle.inputContainer}>\n          <input\n            type=\"password\"\n            name=\"newPassword\"\n            placeholder=\"Enter your new password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            className={resetstyle.inputField}\n          />\n          <p className={basestyle.error}>{formErrors.newPassword}</p>\n        </div>\n        <div className={resetstyle.inputContainer}>\n          <input\n            type=\"password\"\n            name=\"confirmPassword\"\n            placeholder=\"Confirm your new password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            className={resetstyle.inputField}\n          />\n          <p className={basestyle.error}>{formErrors.confirmPassword}</p>\n        </div>\n        <button type=\"submit\" className={basestyle.button_common}>\n          Reset Password\n        </button>\n        <p>{message}</p>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}